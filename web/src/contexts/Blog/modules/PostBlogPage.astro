---
import Layout from "@/sections/shared/Layout.astro";
import type { CollectionKey } from "astro:content";
import { getEntry } from "astro:content";
import type { Data } from "@/common/astro";
import type { PostEntry } from "@/contexts/Blog/infraestructure/sanity-post-blog-collection";
import { getMediaListOptimized } from "@/common/sanity/getOptimizedImage";
import CardPost from "@/components/CardPost/CardPost.astro";
import Hero from "@/sections/Hero/Hero.astro";
import HeroPost from "@/sections/HeroPost/HeroPost.astro";
import type { SectionBase } from "@/common/types";
import { getHtmlSimpleCopy } from "@/common/utils/get-html-render";
import SectionContainer from "@/common/modules/SectionContainer/SectionContainer.astro";
import SectionGridPost from "./sections/SectionGridPost/SectionGridPost.astro";

type Props = {
  _id: string;
};

const { _id } = Astro.props;

const collection: CollectionKey = "Post";

const { data } = (await getEntry(collection, _id)) as Data<PostEntry>;

// const shared = await getCollection("shared");

const category = data.category?._ref || "";
---

<Layout collection={collection} _id={_id}>
  {data.hero && <HeroPost _id={_id} />}
  {
    data.pageSections?.map((section, index) => {
      switch (section._type) {
        case "banner":
          return "";
        case "sectionMarkdown":
          return (
            <SectionContainer
              boxed="small"
              set:html={getHtmlSimpleCopy(section.content)}
            />
          );
        default:
          // section reference = section._type es igual SharedSection
          return "";
      }
    })
  }
  <SectionGridPost category_id={category} />
</Layout>
