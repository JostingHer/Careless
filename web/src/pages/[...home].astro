---
import { getCollection } from "astro:content";
import { getSlugWithLang } from "@/translations/modules/getSlugWithLang";
import Layout from "@/layouts/Layout.astro";
import Welcome from "@/components/Welcome.astro";
import NavBar from "@/components/NavBar.astro";
import CarouselPost from "@/components/CarouselPost.astro";
import CarouselBrands from "@/sections/CarouselBrands/CarouselBrands.astro";
import { string } from "astro:schema";
import type { PrototypePageData } from "@/shared/utils/typesGenerals";
import type { HomeBlog } from "@/shared/sanity/sanity.types";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";
// Removed invalid import
// Esta función genera las rutas estáticas para cada página de `homeBlog`

interface Props {
    data: PrototypePageData<HomeBlog>;
    listLinks: { lang: string; link: string }[];
}
export async function getStaticPaths() {
    const data = await getCollection("homeBlog");

    const paths = data.map((page) => {

        const reference = page.data.ref;
        const dataOtherLangFiltered = data.filter((page) => page.data.ref === reference);

        const listLinks = dataOtherLangFiltered.map((page) => ({
            lang: page.data.lang,
            link: getSlugWithLang(page.data.slug, page.data.lang),
        }));
            
        return {
            params: {
                home: `${getSlugWithLang(page.data.slug, page.data.lang)}`,
            },
            props: {
                data: page.data,
                listLinks,
            },
        }
    }
    );
    console.log('Generated paths:', paths);
    return paths;
} ;

const { data, listLinks } = Astro.props;
const { home } = Astro.params;

const COMPONENTS_MAP: Record<string, any> = {
  "sectionCarouselPostFilter": CarouselPost,
  "stories": CarouselPost,
};


---
<Layout>

<NavBar listLinks={listLinks}/>





<h1>caorusel copy</h1>

<pre>
    <code>
        {JSON.stringify(data, null, 2)}
    </code>
</pre>


{data.pageSections?.map((item) => {
    const Component = COMPONENTS_MAP[item?._type];
    <Component {...item} />;
  })}

</Layout>
