---
import type { Data, SharedContext } from "@/common/astro";
import HeaderLink from "../HeaderLink.astro";
import { DEFAULT_LANGUAGE } from "@global-shared/translations/domain/languages";
import { getCollection } from "astro:content";
import type { HomeBlogEntry } from "@/contexts/Blog/infraestructure/sanity-home-blog-collection";
import type { CategoryEntry } from "@/contexts/Blog/infraestructure/sanity-category-blog-collection";
import { logo_light_html } from "@/assets/icons/html/company-elements";
import type { AuthorEntry } from "@/contexts/Blog/infraestructure/sanity-author-blog-collection";

type Props = SharedContext & {
  show?: boolean;
};
const { show = true } = Astro.props as Props;

const { language = DEFAULT_LANGUAGE, collection, ref, id } = Astro.props;

const homeCollection = (await getCollection(
  "HomeBlog"
)) as Data<HomeBlogEntry>[];

const homeLink = homeCollection
  .map((home) => {
    const { id, data } = home;
    const { language, slug } = data;
    return {
      link: slug,
      lang: language,
    };
  })
  .filter((home) => home.lang === language)[0].link;

const categoryBlog = (await getCollection("Category")) as Data<CategoryEntry>[];

const categoryLink = categoryBlog
  .map((category) => {
    const { id, data } = category;
    const { language, slug, name } = data;
    return {
      link: slug,
      lang: language,
      name,
    };
  })
  .filter((category) => category.lang === language);

const authorBlog = (await getCollection("Author")) as Data<AuthorEntry>[];

const authorLink = authorBlog
  .map((category) => {
    const { id, data } = category;
    const { language, slug, name } = data;
    return {
      link: slug,
      lang: language,
      name,
    };
  })
  .filter((category) => category.lang === language);
---

{show && <a href={homeLink} class="header__logo" set:html={logo_light_html} />}
<nav class="m-nav">
  <HeaderLink class="header__link" href={homeLink}>Home</HeaderLink>
  <details class="nav__details">
    <summary id="summary-blog" class="nav__link-button">Blog</summary>
    <ul class="nav__details-content">
      {
        categoryLink.map((category) => (
          <li>
            <HeaderLink
              class="header__link header__link--subitem"
              href={category.link}
            >
              {category.name}
            </HeaderLink>
          </li>
        ))
      }
    </ul>
  </details>
  <details class="nav__details">
    <summary id="summary-author" class="nav__link-button">Socios</summary>
    <ul class="nav__details-content">
      {
        authorLink.map((author) => (
          <li>
            <HeaderLink
              class="header__link header__link--subitem"
              href={author.link}
            >
              {author.name}
            </HeaderLink>
          </li>
        ))
      }
    </ul>
  </details>
  <HeaderLink class="header__link" href="/sandra/">Shop</HeaderLink>
</nav>
